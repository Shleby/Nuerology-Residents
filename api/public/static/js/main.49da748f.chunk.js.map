{"version":3,"sources":["reportWebVitals.ts","components/HomeSvg.tsx","context/toastContext.ts","pages/authPages/Login.tsx","authentication/userAuth.ts","pages/authPages/Signup.tsx","pages/NotFound.tsx","components/AuthRoute.tsx","pages/Unauthorized.tsx","context/userContext.ts","pages/resident_pages/ResidentLanding.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HomeSvg","xmlns","viewBox","width","style","marginRight","id","data-name","height","transform","fill","d","stroke","stroke-width","x","y","ToastContext","createContext","registerSuccess","toggleRegisterSuccess","console","warn","logoutSuccess","toggleLogoutSuccess","loginSuccess","toggleLoginSuccess","useToastContext","useContext","useStyles","makeStyles","theme","textField","color","backgroundColor","borderBottom","Login","classes","history","useHistory","useState","formEmail","setFormEmail","formPassword","setFormPassword","onFormChange","e","formID","preventDefault","target","value","useEffect","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","dark","ColorButton","withStyles","root","marginTop","Button","handleLogout","a","axios","method","url","res","localStorage","removeItem","log","submit","userData","email","password","data","headers","resetForm","setItem","message","userType","displayName","push","getItem","className","newestOnTop","rtl","pauseOnFocusLoss","to","onSubmit","TextField","name","label","variant","required","onChange","InputProps","InputLabelProps","type","defaultValue","onClick","UserRoles","Signup","setEmail","setPassword","passwordCheck","setPasswordCheck","setDisplayName","userRole","setUserRole","ouid","setOUID","recaptchaLoad","setRecaptchaLoad","isVerified","setIsVerified","StyledRadio","checked","props","Radio","length","EmailValidator","String","includes","FormLabel","component","RadioGroup","aria-label","event","FormControlLabel","control","disabled","sitekey","render","onloadCallback","verifyCallback","NotFound","AuthRoutes","NonAuthRoutes","superAdmin","admin","resident","attendee","nurse","AuthRoute","Component","path","exact","userHasRequiredRole","requiredRoles","pathname","login","unauthorized","state","requestedPath","Unauthorized","UserContext","ResidentLanding","token","loggedIn","toggleLoggedIn","CreateRouting","uemail","utoken","setToken","udisplayName","uuserType","setUserType","uloggedIn","setLoggedIn","rSuccess","toggleRSuccess","lSuccess","toggleLSuccess","inSuccess","toggleInSuccess","Provider","toggleEmail","toggleToken","toggleDisplayName","toggleUserType","register","residentAccount","residentDashboard","residentStatistics","attendeeAccount","attendeeDashboard","attendeeStatistics","nurseAccount","nurseDashboard","nurseStatistics","adminPanel","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49da748f.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"../App.css\";\r\nexport default function HomeSvg() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 281.46 370.064\"\r\n      width=\"50px\"\r\n      style={{ marginRight: 20 }}\r\n    >\r\n      <rect\r\n        id=\"Rectangle_17\"\r\n        data-name=\"Rectangle 17\"\r\n        width=\"53\"\r\n        height=\"156\"\r\n        transform=\"translate(161 55.102)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <path\r\n        id=\"Path_2\"\r\n        data-name=\"Path 2\"\r\n        d=\"M55.5,53.448V0H0Z\"\r\n        transform=\"translate(161 266.602) rotate(-90)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <path\r\n        id=\"Path_4\"\r\n        data-name=\"Path 4\"\r\n        d=\"M55.5,0V53.448H0Z\"\r\n        transform=\"translate(214.448 0.102) rotate(90)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <rect\r\n        id=\"Rectangle_19\"\r\n        data-name=\"Rectangle 19\"\r\n        width=\"53\"\r\n        height=\"156\"\r\n        transform=\"translate(161 55.102)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <rect\r\n        id=\"Rectangle_20\"\r\n        data-name=\"Rectangle 20\"\r\n        width=\"109\"\r\n        height=\"56\"\r\n        transform=\"translate(52.448 210.102)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <rect\r\n        id=\"Rectangle_21\"\r\n        data-name=\"Rectangle 21\"\r\n        width=\"53\"\r\n        height=\"156\"\r\n        transform=\"translate(0.448 55.102)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <path\r\n        id=\"Path_5\"\r\n        data-name=\"Path 5\"\r\n        d=\"M55.5,0V53.448H0Z\"\r\n        transform=\"translate(0 266.602) rotate(-90)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <path\r\n        id=\"Path_6\"\r\n        data-name=\"Path 6\"\r\n        d=\"M55.5,53.121V0L-.1.872Z\"\r\n        transform=\"translate(53.448 0.102) rotate(90)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <rect\r\n        id=\"Rectangle_22\"\r\n        data-name=\"Rectangle 22\"\r\n        width=\"52\"\r\n        height=\"156\"\r\n        transform=\"translate(0.448 55.102)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <rect\r\n        id=\"Rectangle_23\"\r\n        data-name=\"Rectangle 23\"\r\n        width=\"109\"\r\n        height=\"56\"\r\n        transform=\"translate(52.448 0.102)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <rect\r\n        id=\"Rectangle_24\"\r\n        data-name=\"Rectangle 24\"\r\n        width=\"53\"\r\n        height=\"156\"\r\n        transform=\"translate(80.448 160.102)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <g\r\n        id=\"Path_7\"\r\n        data-name=\"Path 7\"\r\n        transform=\"translate(80.448 369.102) rotate(-90)\"\r\n        fill=\"#841617\"\r\n      >\r\n        <path\r\n          d=\"M 52.5000114440918 56.9222412109375 L 0.1517051607370377 52.59038925170898 L 52.5000114440918 -0.01357791479676962 L 52.5000114440918 56.9222412109375 Z\"\r\n          stroke=\"none\"\r\n        />\r\n        <path\r\n          d=\"M 52 1.197704315185547 L 1.264701843261719 52.18078994750977 L 52 56.37916564941406 L 52 1.197704315185547 M 53 -1.224849700927734 L 53 57.46532821655273 L -0.9613113403320313 53 L 53 -1.224849700927734 Z\"\r\n          stroke=\"none\"\r\n          fill=\"#841617\"\r\n        />\r\n      </g>\r\n      <rect\r\n        id=\"Rectangle_25\"\r\n        data-name=\"Rectangle 25\"\r\n        width=\"53\"\r\n        height=\"183\"\r\n        transform=\"translate(80.448 133.102)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <path\r\n        id=\"Path_8\"\r\n        data-name=\"Path 8\"\r\n        d=\"M54,53.448V0H0Z\"\r\n        transform=\"translate(228.012 369.102) rotate(-90)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <g\r\n        id=\"Rectangle_26\"\r\n        data-name=\"Rectangle 26\"\r\n        transform=\"translate(133.448 316.102)\"\r\n        fill=\"#841617\"\r\n        stroke=\"#841617\"\r\n        stroke-width=\"1\"\r\n      >\r\n        <rect width=\"95\" height=\"53\" stroke=\"none\" />\r\n        <rect x=\"0.5\" y=\"0.5\" width=\"94\" height=\"52\" fill=\"none\" />\r\n      </g>\r\n      <rect\r\n        id=\"Rectangle_27\"\r\n        data-name=\"Rectangle 27\"\r\n        width=\"53\"\r\n        height=\"157\"\r\n        transform=\"translate(228 159.102)\"\r\n        fill=\"#841617\"\r\n      />\r\n      <g\r\n        id=\"Path_9\"\r\n        data-name=\"Path 9\"\r\n        transform=\"translate(209.758 299.102)\"\r\n        fill=\"#841617\"\r\n      >\r\n        <path\r\n          d=\"M 12.92974662780762 27.39937210083008 C 4.693445682525635 27.39937210083008 -4.525194644927979 24.92843627929688 -7.189078330993652 24.16103935241699 C -5.456948280334473 22.26308059692383 0.2399802505970001 16.06369590759277 6.448066711425781 9.773541450500488 C 18.78500556945801 -2.726508378982544 23.58036613464355 -5.960898399353027 25.43074607849121 -6.47307825088501 C 25.6185359954834 -6.525058269500732 25.80415725708008 -6.551408290863037 25.98244667053223 -6.551408290863037 C 27.42644691467285 -6.551408290863037 28.40597724914551 -4.843418121337891 28.97341728210449 -3.410588264465332 C 29.62913703918457 -1.754858255386353 30.09209632873535 0.4357216954231262 30.31222724914551 2.924311637878418 C 30.53514671325684 5.444431781768799 30.49800682067871 8.158601760864258 30.2048168182373 10.77341175079346 C 29.89246559143066 13.55906200408936 29.28857612609863 16.19339179992676 28.45842742919922 18.3916015625 C 27.53922653198242 20.82560157775879 26.36051559448242 22.72920227050781 24.95502662658691 24.04952239990234 C 22.58882713317871 26.2723217010498 18.54293632507324 27.39937210083008 12.92974662780762 27.39937210083008 Z\"\r\n          stroke=\"none\"\r\n        />\r\n        <path\r\n          d=\"M 25.98244667053223 -6.051408767700195 C 25.84920692443848 -6.051408767700195 25.70846557617188 -6.031148910522461 25.56413650512695 -5.99119758605957 C 24.09747695922852 -5.585227966308594 19.71025657653809 -2.95197868347168 6.806137084960938 10.12253189086914 C 1.149261474609375 15.85410308837891 -4.083328247070313 21.51086807250977 -6.272712707519531 23.89995765686035 C -2.913200378417969 24.82804679870605 5.426071166992188 26.89937210083008 12.92974662780762 26.89937210083008 C 18.41153717041016 26.89937210083008 22.34224700927734 25.81793212890625 24.61268615722656 23.68509101867676 C 25.96212577819824 22.41743087768555 27.09864616394043 20.57701110839844 27.99066543579102 18.21496200561523 C 28.80632591247559 16.05510139465332 29.400146484375 13.46260166168213 29.70792579650879 10.71770191192627 C 30.28737640380859 5.549840927124023 29.81659698486328 0.07642173767089844 28.50853729248047 -3.22648811340332 C 28.09071731567383 -4.28150749206543 27.20694732666016 -6.051408767700195 25.98244667053223 -6.051408767700195 M 25.98244857788086 -7.051410675048828 C 32.09714126586914 -7.051410675048828 33.35303497314453 16.84645843505859 25.29736709594727 24.41394233703613 C 22.51482009887695 27.02785491943359 17.87645149230957 27.89937210083008 12.92974185943604 27.89937210083008 C 3.035417556762695 27.89937210083008 -8.09521484375 24.41394233703613 -8.09521484375 24.41394233703613 C -8.09521484375 24.41394233703613 18.60113716125488 -5.101469039916992 25.29736709594727 -6.954957962036133 C 25.53196334838867 -7.019893646240234 25.76044845581055 -7.051410675048828 25.98244857788086 -7.051410675048828 Z\"\r\n          stroke=\"none\"\r\n          fill=\"#841617\"\r\n        />\r\n      </g>\r\n      <g\r\n        id=\"Path_10\"\r\n        data-name=\"Path 10\"\r\n        transform=\"translate(133.758 299.102)\"\r\n        fill=\"#841617\"\r\n      >\r\n        <path\r\n          d=\"M 20.09201240539551 23.78856468200684 L -49.69284820556641 17.0039176940918 L -6.077250957489014 -4.319173336029053 L 20.09201240539551 23.78856468200684 Z\"\r\n          stroke=\"none\"\r\n        />\r\n        <path\r\n          d=\"M -6.190620422363281 -3.707183837890625 L -47.88613891601563 16.67720603942871 L 18.82659912109375 23.16317367553711 L -6.190620422363281 -3.707183837890625 M -5.963865280151367 -4.931156158447266 L 21.35742568969727 24.41394424438477 L -51.49951553344727 17.33062362670898 L -5.963865280151367 -4.931156158447266 Z\"\r\n          stroke=\"none\"\r\n          fill=\"#841617\"\r\n        />\r\n      </g>\r\n      <g\r\n        id=\"Path_11\"\r\n        data-name=\"Path 11\"\r\n        transform=\"translate(51.758 194.102)\"\r\n        fill=\"#841617\"\r\n      >\r\n        <path\r\n          d=\"M 20.09201240539551 23.78856468200684 L -49.69284820556641 17.0039176940918 L -6.077250957489014 -4.319173336029053 L 20.09201240539551 23.78856468200684 Z\"\r\n          stroke=\"none\"\r\n        />\r\n        <path\r\n          d=\"M -6.190620422363281 -3.707183837890625 L -47.88613891601563 16.67720603942871 L 18.82659912109375 23.16317367553711 L -6.190620422363281 -3.707183837890625 M -5.963865280151367 -4.931156158447266 L 21.35742568969727 24.41394424438477 L -51.49951553344727 17.33062362670898 L -5.963865280151367 -4.931156158447266 Z\"\r\n          stroke=\"none\"\r\n          fill=\"#841617\"\r\n        />\r\n      </g>\r\n      <g\r\n        id=\"Path_12\"\r\n        data-name=\"Path 12\"\r\n        transform=\"translate(192.758 194.102)\"\r\n        fill=\"#841617\"\r\n      >\r\n        <path\r\n          d=\"M -50.23410034179688 23.78856468200684 L -24.06483840942383 -4.319173336029053 L 19.55076026916504 17.0039176940918 L -50.23410034179688 23.78856468200684 Z\"\r\n          stroke=\"none\"\r\n        />\r\n        <path\r\n          d=\"M -23.95146942138672 -3.707183837890625 L -48.96868896484375 23.16317367553711 L 17.74404907226563 16.67720603942871 L -23.95146942138672 -3.707183837890625 M -24.17822456359863 -4.931156158447266 L 21.35742568969727 17.33062362670898 L -51.49951553344727 24.41394424438477 L -24.17822456359863 -4.931156158447266 Z\"\r\n          stroke=\"none\"\r\n          fill=\"#841617\"\r\n        />\r\n      </g>\r\n      <g\r\n        id=\"Path_13\"\r\n        data-name=\"Path 13\"\r\n        transform=\"translate(192.758 54.102)\"\r\n        fill=\"#841617\"\r\n      >\r\n        <path\r\n          d=\"M -24.06483840942383 23.80196189880371 L -50.23410034179688 -4.305776119232178 L 19.55076026916504 2.478869438171387 L -24.06483840942383 23.80196189880371 Z\"\r\n          stroke=\"none\"\r\n        />\r\n        <path\r\n          d=\"M -23.95146942138672 23.18997192382813 L 17.74404907226563 2.805581569671631 L -48.96868896484375 -3.680385112762451 L -23.95146942138672 23.18997192382813 M -24.17822456359863 24.41394424438477 L -51.49951553344727 -4.931156158447266 L 21.35742568969727 2.152163982391357 L -24.17822456359863 24.41394424438477 Z\"\r\n          stroke=\"none\"\r\n          fill=\"#841617\"\r\n        />\r\n      </g>\r\n      <g\r\n        id=\"Path_14\"\r\n        data-name=\"Path 14\"\r\n        transform=\"translate(51.758 54.102)\"\r\n        fill=\"#841617\"\r\n      >\r\n        <path\r\n          d=\"M -6.077250957489014 23.80196189880371 L -49.69284820556641 2.478869438171387 L 20.09201240539551 -4.305776119232178 L -6.077250957489014 23.80196189880371 Z\"\r\n          stroke=\"none\"\r\n        />\r\n        <path\r\n          d=\"M -6.190620422363281 23.18997192382813 L 18.82659912109375 -3.680385112762451 L -47.88613891601563 2.805581569671631 L -6.190620422363281 23.18997192382813 M -5.963864803314209 24.41394424438477 L -51.49951553344727 2.152163982391357 L 21.35742568969727 -4.931156158447266 L -5.963864803314209 24.41394424438477 Z\"\r\n          stroke=\"none\"\r\n          fill=\"#841617\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import { createContext, useContext } from \"react\";\r\n\r\nexport type ToastContextType = {\r\n  registerSuccess: boolean;\r\n  toggleRegisterSuccess: (value: boolean) => void;\r\n  logoutSuccess: boolean;\r\n  toggleLogoutSuccess: (value: boolean) => void;\r\n  loginSuccess: boolean;\r\n  toggleLoginSuccess: (value: boolean) => void;\r\n};\r\n\r\nexport const ToastContext = createContext<ToastContextType>({\r\n  registerSuccess: false,\r\n  toggleRegisterSuccess: (registerSuccess) => console.warn(\"No rs provider\"),\r\n  logoutSuccess: false,\r\n  toggleLogoutSuccess: (logoutSuccess) => console.warn(\"No rs provider\"),\r\n  loginSuccess: false,\r\n  toggleLoginSuccess: (loginSuccess) => console.warn(\"No rs provider\"),\r\n});\r\n\r\nexport const useToastContext = () => useContext(ToastContext);\r\n","import {\r\n  Button,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport HomeSvg from \"../../components/HomeSvg\";\r\nimport { useToastContext } from \"../../context/toastContext\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\nimport \"../../App.css\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  textField: {\r\n    color: \"#8a6565 !important\",\r\n    backgroundColor: \"white !important\",\r\n    \"& MuiFormLabel-root.Mui-focused\": {\r\n      color: \"#8a6565\",\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"&:focus\": {\r\n      color: \"#8a6565\",\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"&:after\": {\r\n      borderBottom: `2px solid #8a6565`,\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"&:hover\": {\r\n      color: \"#8a6565\",\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"&:selected\": {\r\n      color: \"#8a6565\",\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const {\r\n    registerSuccess,\r\n    toggleRegisterSuccess,\r\n    logoutSuccess,\r\n    toggleLogoutSuccess,\r\n    loginSuccess,\r\n    toggleLoginSuccess,\r\n  } = useToastContext();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // States kept track of for the login form\r\n  const [formEmail, setFormEmail] = useState<string>(\"\");\r\n  const [formPassword, setFormPassword] = useState<string>(\"\");\r\n\r\n  /**\r\n   * Renders in a toast\r\n   */\r\n  useEffect(() => {\r\n    if (registerSuccess) {\r\n      toast.success(\"Successfully Registered\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      toggleRegisterSuccess(false);\r\n    }\r\n    if (logoutSuccess) {\r\n      toast.dark(\"Successfully Logged Out\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      toggleLogoutSuccess(false);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Form change listener that updates state on change\r\n   * @param e Change listener\r\n   * @param formID Marks which state to update\r\n   */\r\n  function onFormChange(\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    formID: string\r\n  ) {\r\n    e.preventDefault();\r\n    if (formID === \"email\") {\r\n      setFormEmail(e.target.value);\r\n    } else if (formID === \"password\") {\r\n      setFormPassword(e.target.value);\r\n    }\r\n  }\r\n  const ColorButton = withStyles((theme: Theme) => ({\r\n    root: {\r\n      color: \"white\",\r\n      backgroundColor: \"#841617\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"rgba(132,22,23,0.8)\",\r\n      },\r\n      marginTop: \"20px\",\r\n    },\r\n  }))(Button);\r\n\r\n  const handleLogout = async (e: { preventDefault: () => void }) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios({\r\n        method: \"GET\",\r\n        url: \"http://localhost:5000/api/logout\",\r\n      }).then((res) => {\r\n        toggleLogoutSuccess(true);\r\n        localStorage.removeItem(\"userType\");\r\n        localStorage.removeItem(\"success\");\r\n        localStorage.removeItem(\"displayname\");\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const submit = async (e: { preventDefault: () => void }) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: formEmail,\r\n      password: formPassword,\r\n    };\r\n\r\n    try {\r\n      await axios({\r\n        method: \"POST\",\r\n        url: \"http://localhost:5000/api/login\",\r\n        data: userData,\r\n        headers: { \"content-type\": \"application/json\" },\r\n      }).then((res) => {\r\n        toggleLoginSuccess(true);\r\n        resetForm();\r\n        if (res.data.success) {\r\n          /**\r\n           * Only store data from the backend that is not sensitive\r\n             This gets stored on users local machine and deleted on logout\r\n             This means this data is \"accessible\" or \"modifiable\"\r\n           */\r\n          localStorage.setItem(\"userType\", res.data.message.userType);\r\n          localStorage.setItem(\"success\", res.data.success);\r\n          localStorage.setItem(\"displayname\", res.data.message.displayName);\r\n\r\n          if (res.data.message.userType === \"resident\") {\r\n            console.log(\"Successfully Logged In\");\r\n            history.push(\"/resident_dashboard\");\r\n          } else if (res.data.message.userType === \"attendee\") {\r\n            console.log(\"Successfully Logged In\");\r\n            history.push(\"/attendee_dashboard\");\r\n          } else if (res.data.message.userType === \"nurse\") {\r\n            console.log(\"Successfully Logged In\");\r\n            history.push(\"/nurse_dashboard\");\r\n          } else if (res.data.message.userType === \"admin\") {\r\n            console.log(\"Successfully Logged In\");\r\n            history.push(\"/admin\");\r\n          }\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    if (!loginSuccess) {\r\n      toast.dark(\"Invalid Login Credentials\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n\r\n    resetForm();\r\n  };\r\n\r\n  function resetForm() {\r\n    setFormEmail(\"\");\r\n    setFormPassword(\"\");\r\n  }\r\n  if (localStorage.getItem(\"displayname\") === null) {\r\n    return (\r\n      <div className=\"grid grid-cols-3\">\r\n        <div className=\"col-span-2 h-screen bg-img\">\r\n          <div className=\"flex flex-row items-center mt-6 ml-6 text-4xl font-quicksand\">\r\n            <HomeSvg />\r\n            <h1 className=\"text-white\">Track your time in Residency</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white shadow-2xl shadow-inner h-screen grid justify-items-center\">\r\n          <ToastContainer\r\n            position=\"top-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick={false}\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n          <div className=\"enter-anim rounded-lg shadow-2xl w-3/4 bg-white mt-96 h-96 flex-col flex p-9\">\r\n            <h1 className=\"text-4xl\" style={{ color: \"#841617\" }}>\r\n              Welcome back\r\n            </h1>\r\n            <h2 className=\"text-3xl\">\r\n              <text className=\"text-lightGrey\">Login</text> /{\" \"}\r\n              <Link to=\"/register\">Sign up</Link>\r\n            </h2>\r\n            <form className=\"flex flex-col mt-6 gap-4\" onSubmit={submit}>\r\n              <TextField\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                variant=\"filled\"\r\n                value={formEmail}\r\n                required\r\n                onChange={(\r\n                  e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n                ) => onFormChange(e, \"email\")}\r\n                InputProps={{\r\n                  className: classes.textField,\r\n                }}\r\n                InputLabelProps={{\r\n                  className: classes.textField,\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                variant=\"filled\"\r\n                value={formPassword}\r\n                type=\"password\"\r\n                required\r\n                defaultValue=\"\"\r\n                onChange={(\r\n                  e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n                ) => onFormChange(e, \"password\")}\r\n                InputProps={{\r\n                  className: classes.textField,\r\n                }}\r\n                InputLabelProps={{\r\n                  className: classes.textField,\r\n                }}\r\n              />\r\n              <ColorButton variant=\"contained\" type=\"submit\" onSubmit={submit}>\r\n                Login\r\n              </ColorButton>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"grid grid-cols-3\">\r\n        <div className=\"col-span-2 h-screen bg-img\">\r\n          <div className=\"flex flex-row items-center mt-6 ml-6 text-4xl font-quicksand\">\r\n            <HomeSvg />\r\n            <h1 className=\"text-white\">Track your time in Residency</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white shadow-2xl shadow-inner h-screen grid justify-items-center\">\r\n          <div className=\"enter-anim rounded-lg shadow-2xl w-3/4 bg-white mt-96 h-64 flex-col flex p-6\">\r\n            <h1 className=\"text-4xl\" style={{ color: \"#841617\" }}>\r\n              Welcome back\r\n            </h1>\r\n            <h1 className=\"text-4xl\" style={{ color: \"black\" }}>\r\n              {localStorage.getItem(\"displayname\")}\r\n            </h1>\r\n            <h2 className=\"text-2xl\">\r\n              <text className=\"text-lightGrey\">You are already logged in</text>\r\n            </h2>\r\n            <Link to=\"/resident_dashboard\" className=\"text-lg\">\r\n              <text style={{ color: \"#841617\" }}>Go to dashboard -{\">\"}</text>\r\n            </Link>\r\n            <ColorButton onClick={handleLogout}>Logout</ColorButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export enum UserRoles {\r\n  superAdmin = \"superAdmin\",\r\n  admin = \"admin\",\r\n  resident = \"resident\",\r\n  attendee = \"attendee\",\r\n  nurse = \"nurse\",\r\n}\r\n\r\nexport const userRoles = {\r\n  admins: [String(UserRoles.superAdmin), String(UserRoles.admin)],\r\n  users: [\r\n    String(UserRoles.resident),\r\n    String(UserRoles.attendee),\r\n    String(UserRoles.nurse),\r\n  ],\r\n  all: [\r\n    String(UserRoles.admin),\r\n    String(UserRoles.resident),\r\n    String(UserRoles.attendee),\r\n    String(UserRoles.nurse),\r\n  ],\r\n};\r\n\r\nexport enum AuthRoutes {\r\n  residentDashboard = \"/resident_dashboard\",\r\n  residentAccount = \"/resident_account\",\r\n  residentStatistics = \"/resident_statistics\",\r\n  attendeeDashboard = \"/attendee_dashboard\",\r\n  attendeeAccount = \"/attendee_account\",\r\n  attendeeStatistics = \"/attendee_statistics\",\r\n  nurseDashboard = \"/nurse_dashboard\",\r\n  nurseAccount = \"/nurse_account\",\r\n  nurseStatistics = \"/nurse_statistics\",\r\n  adminPanel = \"/admin\",\r\n}\r\n\r\nexport enum NonAuthRoutes {\r\n  login = \"/\",\r\n  register = \"/register\",\r\n  unauthorized = \"/unauthorized\",\r\n  support = \"/support\",\r\n}\r\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport HomeSvg from \"../../components/HomeSvg\";\nimport \"../../App.css\";\nimport {\n  Button,\n  FormControlLabel,\n  FormLabel,\n  makeStyles,\n  Radio,\n  RadioGroup,\n  RadioProps,\n  TextField,\n  Theme,\n  withStyles,\n} from \"@material-ui/core\";\nimport Recaptcha from \"react-recaptcha\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport * as EmailValidator from \"email-validator\";\nimport { useToastContext } from \"../../context/toastContext\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  textField: {\n    color: \"#8a6565 !important\",\n    backgroundColor: \"white !important\",\n    \"& MuiFormLabel-root.Mui-focused\": {\n      color: \"#8a6565\",\n      backgroundColor: \"white\",\n    },\n    \"&:focus\": {\n      color: \"#8a6565\",\n      backgroundColor: \"white\",\n    },\n    \"&:after\": {\n      borderBottom: `2px solid #8a6565`,\n      backgroundColor: \"white\",\n    },\n    \"&:hover\": {\n      color: \"#8a6565\",\n      backgroundColor: \"white\",\n    },\n    \"&:selected\": {\n      color: \"#8a6565\",\n      backgroundColor: \"white\",\n    },\n  },\n}));\n\nexport default function Signup() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { toggleRegisterSuccess } = useToastContext();\n\n  /**\n   * Registration states to keep track of\n   */\n  const [email, setEmail] = useState<string | null>(null);\n  const [password, setPassword] = useState<string | null>(null);\n  const [passwordCheck, setPasswordCheck] = useState<string | null>(null);\n  const [displayName, setDisplayName] = useState<string | null>(null);\n  const [userRole, setUserRole] = useState<string | null>(null);\n  const [ouid, setOUID] = useState<string | null>(null);\n  const [recaptchaLoad, setRecaptchaLoad] = useState(true);\n  const [isVerified, setIsVerified] = useState(true);\n\n  /**\n   * Methods to support recaptcha\n   */\n  function recaptchaLoaded() {\n    setRecaptchaLoad(true);\n  }\n\n  function verifiedRecaptcha(e: any) {\n    if (e) {\n      setIsVerified(true);\n    }\n  }\n\n  /**\n   * Form change listener that updates state on change\n   * @param e Change listener\n   * @param formID Marks which state to update\n   */\n  function onFormChange(\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    formID: string\n  ) {\n    e.preventDefault();\n    if (formID === \"email\") {\n      setEmail(e.target.value);\n    } else if (formID === \"password\") {\n      setPassword(e.target.value);\n    } else if (formID === \"check\") {\n      setPasswordCheck(e.target.value);\n    } else if (formID === \"name\") {\n      setDisplayName(e.target.value);\n    } else if (formID === \"ouid\") {\n      setOUID(e.target.value);\n    }\n  }\n\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserRole((event.target as HTMLInputElement).value);\n  };\n\n  const StyledRadio = withStyles({\n    root: {\n      color: \"#841617\",\n      \"&$checked\": {\n        color: \"#841617\",\n      },\n    },\n    checked: {},\n  })((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\n  const ColorButton = withStyles((theme: Theme) => ({\n    root: {\n      color: \"white\",\n      backgroundColor: \"#841617\",\n      \"&:hover\": {\n        backgroundColor: \"rgba(132,22,23,0.8)\",\n      },\n    },\n  }))(Button);\n\n  const submit = async (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n\n    if (userRole === \"\") {\n      toast.dark(\"No Account Type selected\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: false,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    if (userRole === \"resident\" && ouid?.length !== 9) {\n      toast.dark(\"Incorrect OUID\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: false,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    if (password !== passwordCheck) {\n      toast.dark(\"Passwords do not match\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: false,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    if (!EmailValidator.validate(String(email))) {\n      toast.dark(\"Email is invalid\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: false,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n\n    // Passes recaptcha verifications\n    if (recaptchaLoad && isVerified) {\n      const userData = {\n        email: email,\n        password: password,\n        passwordCheck: passwordCheck,\n        ouid: ouid,\n        displayName: displayName,\n        userType: userRole,\n      };\n      try {\n        await axios({\n          method: \"POST\",\n          url: \"http://localhost:5000/api/register\",\n          data: userData,\n          headers: { \"content-type\": \"application/json\" },\n        }).then((res) => {\n          toggleRegisterSuccess(true);\n        });\n\n        history.push(\"/\");\n      } catch (err) {\n        if (err.message.includes(\"409\")) {\n          toast.dark(\"Account already exists\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: false,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        } else {\n          toast.dark(\"Error in registration\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: false,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        }\n      }\n    }\n    resetForm();\n  };\n\n  function resetForm() {\n    setEmail(\"\");\n    setPassword(\"\");\n    setPasswordCheck(\"\");\n    setDisplayName(\"\");\n    setOUID(\"\");\n    setUserRole(\"\");\n  }\n  return (\n    <div className=\"grid grid-cols-3\">\n      <div className=\"col-span-2 h-screen bg-img\">\n        <div className=\"flex flex-row items-center mt-6 ml-6 text-4xl font-quicksand\">\n          <HomeSvg />\n          <h1 className=\"text-white\">Track your time in Residency</h1>\n        </div>\n      </div>\n      <div className=\"bg-white shadow-2xl shadow-inner h-screen grid justify-items-center\">\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick={false}\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <div className=\" enter-anim rounded-lg shadow-2xl w-3/4 bg-white m-10 h-auto flex-col flex p-6\">\n          <h1 className=\"text-3xl\">\n            <Link to=\"/\">Login</Link> /{\" \"}\n            <text className=\"text-lightGrey\">Signup</text>\n          </h1>\n          <form className=\"flex flex-col mt-6 gap-4\" onSubmit={submit}>\n            <p className=\"text-lg\">Required Fields*</p>\n            <FormLabel component=\"legend\">Select Account Type</FormLabel>\n            <RadioGroup\n              defaultValue=\"Resident\"\n              aria-label=\"userRole\"\n              name=\"customized-radios\"\n              value={userRole}\n              onChange={handleRadioChange}\n            >\n              <FormControlLabel\n                value=\"resident\"\n                control={<StyledRadio />}\n                label=\"Resident\"\n              />\n              <FormControlLabel\n                value=\"attendee\"\n                control={<StyledRadio />}\n                label=\"Attendee\"\n              />\n              <FormControlLabel\n                value=\"nurse\"\n                control={<StyledRadio />}\n                label=\"Nurse\"\n              />\n              <FormControlLabel\n                value=\"admin\"\n                disabled\n                control={<StyledRadio />}\n                label=\"Administrator\"\n              />\n            </RadioGroup>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              variant=\"filled\"\n              value={email}\n              required\n              onChange={(\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => onFormChange(e, \"email\")}\n              InputProps={{\n                className: classes.textField,\n              }}\n              InputLabelProps={{\n                className: classes.textField,\n              }}\n            />\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              variant=\"filled\"\n              value={password}\n              type=\"password\"\n              required\n              onChange={(\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => onFormChange(e, \"password\")}\n              InputProps={{\n                className: classes.textField,\n              }}\n              InputLabelProps={{\n                className: classes.textField,\n              }}\n            />\n            <TextField\n              id=\"check\"\n              name=\"check\"\n              label=\"Confirm Password\"\n              variant=\"filled\"\n              type=\"password\"\n              value={passwordCheck}\n              required\n              onChange={(\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => onFormChange(e, \"check\")}\n              InputProps={{\n                className: classes.textField,\n              }}\n              InputLabelProps={{\n                className: classes.textField,\n              }}\n            />\n            <FormLabel component=\"legend\">Required for residents</FormLabel>\n            <TextField\n              id=\"ouid\"\n              name=\"ouid\"\n              label=\"OU ID (9-digit)\"\n              variant=\"filled\"\n              required={userRole === \"resident\"}\n              value={ouid}\n              onChange={(\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => onFormChange(e, \"ouid\")}\n              InputProps={{\n                className: classes.textField,\n              }}\n              InputLabelProps={{\n                className: classes.textField,\n              }}\n            />\n            <p className=\"text-lg\">Optional Fields</p>\n            <TextField\n              id=\"name\"\n              name=\"name\"\n              label=\"Name\"\n              variant=\"filled\"\n              value={displayName}\n              onChange={(\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => onFormChange(e, \"name\")}\n              InputProps={{\n                className: classes.textField,\n              }}\n              InputLabelProps={{\n                className: classes.textField,\n              }}\n            />\n            <Recaptcha\n              // TODO: Genereate sitekey for this app, current one is shelbyhuffy.com\n              sitekey=\"6LeqMgAaAAAAAE9IOOKeYk34ElJ8BT7NfgeXp7Gk\"\n              render=\"explicit\"\n              onloadCallback={recaptchaLoaded}\n              verifyCallback={verifiedRecaptcha}\n            />\n            <ColorButton variant=\"contained\" type=\"submit\">\n              Sign up\n            </ColorButton>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"bg-red-200 flex items-center justify-center h-screen w-full overflow-hidden\">\r\n      <svg\r\n        viewBox=\"0 0 200 200\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"lg:max-w-7xl sm:max-w-8xl\"\r\n      >\r\n        <path\r\n          // fill=\"#D0E2FF\"\r\n          fill=\"#fff\"\r\n          d=\"M35.4,-45.6C50.4,-45.5,70.1,-43.3,80.1,-33.1C90.2,-23,90.6,-4.9,85.6,10.6C80.7,26.1,70.4,39.1,58.7,48.7C47,58.3,33.9,64.6,21.5,64C9.1,63.4,-2.6,56,-14.3,51.4C-26.1,46.8,-38,45,-50.5,39C-63.1,33.1,-76.4,23,-80.7,10C-85,-2.9,-80.3,-18.7,-72.9,-32.6C-65.5,-46.5,-55.4,-58.6,-42.8,-59.8C-30.3,-60.9,-15.1,-51.2,-2.4,-47.4C10.2,-43.6,20.5,-45.7,35.4,-45.6Z\"\r\n          transform=\"translate(100 100)\"\r\n        />\r\n      </svg>\r\n      <div className=\"absolute text-black\">\r\n        <h1 className=\"lg:text-6xl md:text-4xl sm:text-base\">404 Not Found</h1>\r\n        <h2 className=\"lg:text-4xl md:text-2xl sm:text-sm\">\r\n          Sorry, we could not find the page you were looking for\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Redirect, Route, RouteComponentProps } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { NonAuthRoutes } from \"../authentication/userAuth\";\r\n\r\ninterface IAuthRouteProps {\r\n  Component: React.FC<RouteComponentProps>;\r\n  path: string;\r\n  exact?: boolean;\r\n  requiredRoles: string[];\r\n}\r\n\r\nexport const AuthRoute = ({\r\n  Component,\r\n  path,\r\n  exact = false,\r\n  requiredRoles,\r\n}: IAuthRouteProps): JSX.Element => {\r\n  const userHasRequiredRole = requiredRoles.includes(\r\n    localStorage.getItem(\"userType\") || \"\"\r\n  );\r\n\r\n  const message = userHasRequiredRole\r\n    ? \"Please log in to view this page\"\r\n    : \"You do not have authorized access\";\r\n\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      path={path}\r\n      render={(props: RouteComponentProps) =>\r\n        localStorage.getItem(\"success\") && userHasRequiredRole ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: userHasRequiredRole\r\n                ? NonAuthRoutes.login\r\n                : NonAuthRoutes.unauthorized,\r\n              state: { message, requestedPath: path },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","export default function Unauthorized() {\r\n  return (\r\n    <div className=\"bg-red-200 flex items-center justify-center h-screen w-full overflow-hidden\">\r\n      <svg\r\n        viewBox=\"0 0 200 200\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"lg:max-w-7xl sm:max-w-8xl\"\r\n      >\r\n        <path\r\n          // fill=\"#D0E2FF\"\r\n          fill=\"#fff\"\r\n          d=\"M35.4,-45.6C50.4,-45.5,70.1,-43.3,80.1,-33.1C90.2,-23,90.6,-4.9,85.6,10.6C80.7,26.1,70.4,39.1,58.7,48.7C47,58.3,33.9,64.6,21.5,64C9.1,63.4,-2.6,56,-14.3,51.4C-26.1,46.8,-38,45,-50.5,39C-63.1,33.1,-76.4,23,-80.7,10C-85,-2.9,-80.3,-18.7,-72.9,-32.6C-65.5,-46.5,-55.4,-58.6,-42.8,-59.8C-30.3,-60.9,-15.1,-51.2,-2.4,-47.4C10.2,-43.6,20.5,-45.7,35.4,-45.6Z\"\r\n          transform=\"translate(100 100)\"\r\n        />\r\n      </svg>\r\n      <div className=\"absolute text-black\">\r\n        <h1 className=\"lg:text-6xl md:text-4xl sm:text-base\">\r\n          401 Unauthorized\r\n        </h1>\r\n        <h2 className=\"lg:text-4xl md:text-2xl sm:text-sm\">\r\n          Sorry, you are not authorized to view this content\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createContext, useContext } from \"react\";\r\n\r\nexport type UserContextType = {\r\n  email: string;\r\n  toggleEmail: (value: string) => void;\r\n  token: string;\r\n  toggleToken: (value: string) => void;\r\n  displayName: string;\r\n  toggleDisplayName: (value: string) => void;\r\n  userType: string;\r\n  toggleUserType: (value: string) => void;\r\n  loggedIn: boolean;\r\n  toggleLoggedIn: (value: boolean) => void;\r\n};\r\n\r\nexport const UserContext = createContext<UserContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nexport const useUserContext = () => useContext(UserContext);\r\n","import React, { useEffect } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useToastContext } from \"../../context/toastContext\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\n\r\nexport default function ResidentLanding() {\r\n  const { loginSuccess, toggleLoginSuccess } = useToastContext();\r\n  const {\r\n    email,\r\n    token,\r\n    displayName,\r\n    userType,\r\n    loggedIn,\r\n    toggleLoggedIn,\r\n  } = useUserContext()!;\r\n  useEffect(() => {\r\n    if (loginSuccess) {\r\n      toast.success(\"Login Successful\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      toggleLoginSuccess(false);\r\n      console.log(token);\r\n      console.log(loggedIn);\r\n      console.log(email);\r\n      console.log(displayName);\r\n      console.log(userType);\r\n    }\r\n    toggleLoggedIn(true);\r\n  });\r\n  return (\r\n    <div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick={false}\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <h1>Resident Landing Page, Hello, {displayName} </h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Login from \"./pages/authPages/Login\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./pages/authPages/Signup\";\nimport NotFound from \"./pages/NotFound\";\nimport {\n  AuthRoutes,\n  NonAuthRoutes,\n  UserRoles,\n} from \"./authentication/userAuth\";\nimport { AuthRoute } from \"./components/AuthRoute\";\nimport Unauthorized from \"./pages/Unauthorized\";\nimport { UserContext } from \"./context/userContext\";\nimport ResidentLanding from \"./pages/resident_pages/ResidentLanding\";\nimport { ToastContext } from \"./context/toastContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CreateRouting />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nfunction CreateRouting() {\n  // Used for initializing the context provider\n  const [uemail, setEmail] = useState<string>(\"\");\n  const [utoken, setToken] = useState<string>(\"\");\n  const [udisplayName, setDisplayName] = useState<string>(\"\");\n  const [uuserType, setUserType] = useState<string>(\"\");\n  const [uloggedIn, setLoggedIn] = useState<boolean>(false);\n  const [rSuccess, toggleRSuccess] = useState<boolean>(false);\n  const [lSuccess, toggleLSuccess] = useState<boolean>(false);\n  const [inSuccess, toggleInSuccess] = useState<boolean>(false);\n\n  return (\n    <ToastContext.Provider\n      value={{\n        registerSuccess: rSuccess,\n        toggleRegisterSuccess: toggleRSuccess,\n        logoutSuccess: lSuccess,\n        toggleLogoutSuccess: toggleLSuccess,\n        loginSuccess: inSuccess,\n        toggleLoginSuccess: toggleInSuccess,\n      }}\n    >\n      <UserContext.Provider\n        value={{\n          email: uemail,\n          toggleEmail: setEmail,\n          token: utoken,\n          toggleToken: setToken,\n          displayName: udisplayName,\n          toggleDisplayName: setDisplayName,\n          userType: uuserType,\n          toggleUserType: setUserType,\n          loggedIn: uloggedIn,\n          toggleLoggedIn: setLoggedIn,\n        }}\n      >\n        <Router>\n          <Switch>\n            {/* Paths accessible for all users */}\n            <Route path={NonAuthRoutes.register} component={Signup} />\n            <Route exact path={NonAuthRoutes.login} component={Login} />\n            {/* Paths accessible for authenticated residents */}\n            <AuthRoute\n              path={AuthRoutes.residentAccount}\n              Component={NotFound}\n              requiredRoles={[\n                String(UserRoles.resident),\n                String(UserRoles.admin),\n                String(UserRoles.superAdmin),\n              ]}\n            />\n            <AuthRoute\n              path={AuthRoutes.residentDashboard}\n              Component={ResidentLanding}\n              requiredRoles={[\n                String(UserRoles.resident),\n                String(UserRoles.admin),\n                String(UserRoles.superAdmin),\n              ]}\n            />\n            <AuthRoute\n              path={AuthRoutes.residentStatistics}\n              Component={NotFound}\n              requiredRoles={[\n                String(UserRoles.resident),\n                String(UserRoles.admin),\n                String(UserRoles.superAdmin),\n              ]}\n            />\n            {/* Paths available for authenticated attendees */}\n            <AuthRoute\n              path={AuthRoutes.attendeeAccount}\n              Component={NotFound}\n              requiredRoles={[\n                String(UserRoles.attendee),\n                String(UserRoles.admin),\n                String(UserRoles.superAdmin),\n              ]}\n            />\n            <AuthRoute\n              path={AuthRoutes.attendeeDashboard}\n              Component={NotFound}\n              requiredRoles={[\n                String(UserRoles.attendee),\n                String(UserRoles.admin),\n                String(UserRoles.superAdmin),\n              ]}\n            />\n            <AuthRoute\n              path={AuthRoutes.attendeeStatistics}\n              Component={NotFound}\n              requiredRoles={[\n                String(UserRoles.attendee),\n                String(UserRoles.admin),\n                String(UserRoles.superAdmin),\n              ]}\n            />\n            {/* Paths available for authenticated nurses */}\n            <AuthRoute\n              path={AuthRoutes.nurseAccount}\n              Component={NotFound}\n              requiredRoles={[\n                String(UserRoles.nurse),\n                String(UserRoles.admin),\n                String(UserRoles.superAdmin),\n              ]}\n            />\n            <AuthRoute\n              path={AuthRoutes.nurseDashboard}\n              Component={NotFound}\n              requiredRoles={[\n                String(UserRoles.nurse),\n                String(UserRoles.admin),\n                String(UserRoles.superAdmin),\n              ]}\n            />\n            <AuthRoute\n              path={AuthRoutes.nurseStatistics}\n              Component={NotFound}\n              requiredRoles={[\n                String(UserRoles.nurse),\n                String(UserRoles.admin),\n                String(UserRoles.superAdmin),\n              ]}\n            />\n            {/* Paths available for authenticated admins */}\n            <AuthRoute\n              path={AuthRoutes.adminPanel}\n              Component={NotFound}\n              requiredRoles={[\n                String(UserRoles.admin),\n                String(UserRoles.superAdmin),\n              ]}\n            />\n            {/* Paths for edge cases */}\n            <Route path={NonAuthRoutes.unauthorized} component={Unauthorized} />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </UserContext.Provider>\n    </ToastContext.Provider>\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}