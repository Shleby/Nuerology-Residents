[{"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\index.tsx":"1","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\context\\userContext.ts":"3","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\error\\ErrorNotice.tsx":"4","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\components\\HomeSvg.tsx":"5","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\NotFound.tsx":"6","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\authPages\\Login.tsx":"7","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\authPages\\Signup.tsx":"8","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\authentication\\userAuth.ts":"9","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\components\\AuthRoute.tsx":"10","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\Unauthorized.tsx":"11","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\resident_pages\\ResidentLanding.tsx":"12"},{"size":5324,"mtime":1609737644185,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":948,"mtime":1609737415860,"results":"16","hashOfConfig":"14"},{"size":690,"mtime":1609632979034,"results":"17","hashOfConfig":"14"},{"size":10952,"mtime":1609559326769,"results":"18","hashOfConfig":"14"},{"size":1127,"mtime":1609634024347,"results":"19","hashOfConfig":"14"},{"size":7844,"mtime":1609737685292,"results":"20","hashOfConfig":"14"},{"size":9103,"mtime":1609711786560,"results":"21","hashOfConfig":"14"},{"size":1092,"mtime":1609642128581,"results":"22","hashOfConfig":"14"},{"size":1328,"mtime":1609737033036,"results":"23","hashOfConfig":"14"},{"size":1122,"mtime":1609731269402,"results":"24","hashOfConfig":"14"},{"size":250,"mtime":1609737025960,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"iklqvo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\index.tsx",[],["53","54"],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\context\\userContext.ts",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\error\\ErrorNotice.tsx",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\components\\HomeSvg.tsx",[],["55","56"],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\NotFound.tsx",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\authPages\\Login.tsx",["57","58","59"],"import {\r\n  Button,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"../../App.css\";\r\nimport HomeSvg from \"../../components/HomeSvg\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  textField: {\r\n    color: \"#8a6565 !important\",\r\n    backgroundColor: \"white !important\",\r\n    \"& MuiFormLabel-root.Mui-focused\": {\r\n      color: \"#8a6565\",\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"&:focus\": {\r\n      color: \"#8a6565\",\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"&:after\": {\r\n      borderBottom: `2px solid #8a6565`,\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"&:hover\": {\r\n      color: \"#8a6565\",\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"&:selected\": {\r\n      color: \"#8a6565\",\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const {\r\n    email,\r\n    password,\r\n    token,\r\n    displayName,\r\n    userType,\r\n    loggedIn,\r\n    setEmail,\r\n    setPassword,\r\n    setToken,\r\n    setDisplayName,\r\n    setUserType,\r\n    setLoggedIn,\r\n  } = useUserContext()!;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // States kept track of for the login form\r\n  const [formEmail, setFormEmail] = useState<string | null>(null);\r\n  const [formPassword, setFormPassword] = useState<string | null>(null);\r\n\r\n  /**\r\n   * Form change listener that updates state on change\r\n   * @param e Change listener\r\n   * @param formID Marks which state to update\r\n   */\r\n  function onFormChange(\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    formID: string\r\n  ) {\r\n    e.preventDefault();\r\n    if (formID === \"email\") {\r\n      setFormEmail(e.target.value);\r\n    } else if (formID === \"password\") {\r\n      setFormPassword(e.target.value);\r\n    }\r\n  }\r\n  const ColorButton = withStyles((theme: Theme) => ({\r\n    root: {\r\n      color: \"white\",\r\n      backgroundColor: \"#841617\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"rgba(132,22,23,0.8)\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  const handleLogout = async (e: { preventDefault: () => void }) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios({\r\n        method: \"GET\",\r\n        url: \"http://localhost:5000/api/logout\",\r\n      }).then((res) => {\r\n        setToken(\"\");\r\n        setLoggedIn(false);\r\n        setUserType(\"\");\r\n        setDisplayName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const submit = (e: { preventDefault: () => void }) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: formEmail,\r\n      password: formPassword,\r\n    };\r\n\r\n    try {\r\n      axios({\r\n        method: \"POST\",\r\n        url: \"http://localhost:5000/api/login\",\r\n        data: userData,\r\n        headers: { \"content-type\": \"application/json\" },\r\n      }).then((res) => {\r\n        setToken(res.data.token);\r\n        setLoggedIn(res.data.success);\r\n        setUserType(res.data.message.userType);\r\n        setDisplayName(res.data.message.displayName);\r\n        setEmail(res.data.message.email);\r\n        setPassword(res.data.message.password);\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    // First Reset Form\r\n    resetForm();\r\n\r\n    // Second, if the user logged in, push to their landing page\r\n    console.log(\"Attempting to redirect\");\r\n    console.log(loggedIn);\r\n    if (loggedIn) {\r\n      console.log(\"Logged in\");\r\n      if (userType === \"resident\") {\r\n        console.log(\"Successfully Logged In\");\r\n        history.push(\"/resident_dashboard\");\r\n      } else if (userType === \"attendee\") {\r\n        console.log(\"Successfully Logged In\");\r\n        history.push(\"/attendee_dashboard\");\r\n      } else if (userType === \"nurse\") {\r\n        console.log(\"Successfully Logged In\");\r\n        history.push(\"/nurse_dashboard\");\r\n      } else if (userType === \"admin\") {\r\n        console.log(\"Successfully Logged In\");\r\n        history.push(\"/admin\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function resetForm() {\r\n    setFormEmail(\"\");\r\n    setFormPassword(\"\");\r\n  }\r\n  if (!loggedIn) {\r\n    return (\r\n      <div className=\"grid grid-cols-3\">\r\n        <div className=\"col-span-2 h-screen bg-img\">\r\n          <div className=\"flex flex-row items-center mt-6 ml-6 text-4xl font-quicksand\">\r\n            <HomeSvg />\r\n            <h1 className=\"text-white\">Track your time in Residency</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white shadow-2xl shadow-inner h-screen grid justify-items-center\">\r\n          <div className=\"enter-anim rounded-lg shadow-2xl w-3/4 bg-white mt-96 h-80 flex-col flex p-6\">\r\n            <h1 className=\"text-4xl\" style={{ color: \"#841617\" }}>\r\n              Welcome back\r\n            </h1>\r\n            <h2 className=\"text-3xl\">\r\n              <text className=\"text-lightGrey\">Login</text> /{\" \"}\r\n              <Link to=\"/register\">Sign up</Link>\r\n            </h2>\r\n            <form className=\"flex flex-col mt-6 gap-4\" onSubmit={submit}>\r\n              <TextField\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                variant=\"filled\"\r\n                value={formEmail}\r\n                required\r\n                onChange={(\r\n                  e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n                ) => onFormChange(e, \"email\")}\r\n                InputProps={{\r\n                  className: classes.textField,\r\n                }}\r\n                InputLabelProps={{\r\n                  className: classes.textField,\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                variant=\"filled\"\r\n                value={formPassword}\r\n                type=\"password\"\r\n                required\r\n                defaultValue=\"\"\r\n                onChange={(\r\n                  e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n                ) => onFormChange(e, \"password\")}\r\n                InputProps={{\r\n                  className: classes.textField,\r\n                }}\r\n                InputLabelProps={{\r\n                  className: classes.textField,\r\n                }}\r\n              />\r\n              <ColorButton variant=\"contained\" type=\"submit\" onSubmit={submit}>\r\n                Login\r\n              </ColorButton>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"grid grid-cols-3\">\r\n        <div className=\"col-span-2 h-screen bg-img\">\r\n          <div className=\"flex flex-row items-center mt-6 ml-6 text-4xl font-quicksand\">\r\n            <HomeSvg />\r\n            <h1 className=\"text-white\">Track your time in Residency</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white shadow-2xl shadow-inner h-screen grid justify-items-center\">\r\n          <div className=\"enter-anim rounded-lg shadow-2xl w-3/4 bg-white mt-96 h-60 flex-col flex p-6\">\r\n            <h1 className=\"text-4xl\" style={{ color: \"#841617\" }}>\r\n              Welcome back\r\n            </h1>\r\n            <h1 className=\"text-4xl\" style={{ color: \"black\" }}>\r\n              {displayName}\r\n            </h1>\r\n            <h2 className=\"text-2xl\">\r\n              <text className=\"text-lightGrey\">You are already logged in</text>\r\n            </h2>\r\n            <Link to=\"/resident_dashboard\" className=\"text-lg\">\r\n              <text style={{ color: \"#841617\" }}>Go to dashboard -{\">\"}</text>\r\n            </Link>\r\n            <ColorButton onClick={handleLogout}>Logout</ColorButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\authPages\\Signup.tsx",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\authentication\\userAuth.ts",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\components\\AuthRoute.tsx",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\Unauthorized.tsx",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\resident_pages\\ResidentLanding.tsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"60","replacedBy":"64"},{"ruleId":"62","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":44,"column":5,"nodeType":"68","messageId":"69","endLine":44,"endColumn":10},{"ruleId":"66","severity":1,"message":"70","line":45,"column":5,"nodeType":"68","messageId":"69","endLine":45,"endColumn":13},{"ruleId":"66","severity":1,"message":"71","line":46,"column":5,"nodeType":"68","messageId":"69","endLine":46,"endColumn":10},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"@typescript-eslint/no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]