[{"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\index.tsx":"1","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\context\\userContext.ts":"3","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\error\\ErrorNotice.tsx":"4","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\components\\HomeSvg.tsx":"5","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\NotFound.tsx":"6","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\authPages\\Login.tsx":"7","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\authPages\\Signup.tsx":"8","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\authentication\\userAuth.ts":"9","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\components\\AuthRoute.tsx":"10","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\Unauthorized.tsx":"11"},{"size":4120,"mtime":1609659512628,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":355,"mtime":1609557455563,"results":"15","hashOfConfig":"13"},{"size":690,"mtime":1609632979034,"results":"16","hashOfConfig":"13"},{"size":10952,"mtime":1609559326769,"results":"17","hashOfConfig":"13"},{"size":1127,"mtime":1609634024347,"results":"18","hashOfConfig":"13"},{"size":2640,"mtime":1609633104342,"results":"19","hashOfConfig":"13"},{"size":4329,"mtime":1609633089451,"results":"20","hashOfConfig":"13"},{"size":1092,"mtime":1609642128581,"results":"21","hashOfConfig":"13"},{"size":1356,"mtime":1609660092114,"results":"22","hashOfConfig":"13"},{"size":1152,"mtime":1609641191918,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"iklqvo",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\index.tsx",["49","50","51","52","53","54"],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\reportWebVitals.ts",[],["55","56"],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\context\\userContext.ts",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\error\\ErrorNotice.tsx",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\components\\HomeSvg.tsx",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\NotFound.tsx",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\authPages\\Login.tsx",["57"],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../App.css\";\r\nimport HomeSvg from \"../../components/HomeSvg\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\n\r\nexport default function Login() {\r\n  // eslint-disable-next-line\r\n  const { userData, setUserData } = useUserContext();\r\n  const history = useHistory();\r\n\r\n  const [email, setEmail] = useState<string>();\r\n  const [password, setPassword] = useState<string>();\r\n  const [error, setError] = useState();\r\n\r\n  const submit = async (e: { preventDefault: () => void }) => {\r\n    e.preventDefault();\r\n    try {\r\n      const loginUser = { email, password };\r\n      const loginResponse = await axios.post(\r\n        \"http://localhost:5000/users/login\",\r\n        loginUser\r\n      );\r\n      setUserData({\r\n        token: loginResponse.data.token,\r\n        user: loginResponse.data.user,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginResponse.data.token);\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-3\">\r\n      <div className=\"col-span-2 h-screen\">\r\n        <div className=\"flex flex-row items-center mt-6 ml-6 text-4xl font-quicksand\">\r\n          <HomeSvg />\r\n          <h1 className=\"text-lightGrey\">Track your time in Residency</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-crimson shadow-2xl shadow-inner h-screen grid justify-items-center\">\r\n        <div className=\"rounded-lg shadow-2xl w-3/4 bg-white mt-96 h-80 flex-col flex p-6\">\r\n          <h1 className=\"text-3xl\">\r\n            <text className=\"text-lightGrey\">Login</text> /{\" \"}\r\n            <Link to=\"/register\">Sign up</Link>\r\n          </h1>\r\n\r\n          <form className=\"flex flex-col mt-6 gap-4\" onSubmit={submit}>\r\n            <label>Email: </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={(\r\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n              ) => setEmail(e.target.value)}\r\n            />\r\n            <label>Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(\r\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n              ) => setPassword(e.target.value)}\r\n            />\r\n            <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\authPages\\Signup.tsx",["58"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport HomeSvg from \"../../components/HomeSvg\";\nimport { useUserContext } from \"../../context/userContext\";\nimport \"../../App.css\";\n\nexport default function Signup() {\n  // eslint-disable-next-line\n  const { userData, setUserData } = useUserContext();\n  const history = useHistory();\n\n  // eslint-disable-next-line\n  const [email, setEmail] = useState<string>();\n  const [password, setPassword] = useState<string>();\n  const [passwordCheck, setPasswordCheck] = useState<string>();\n  const [displayName, setDisplayName] = useState<string>();\n  const [error, setError] = useState();\n\n  const submit = async (e: { preventDefault: () => void }) => {\n    console.log(\n      email + \" \" + password + \" \" + passwordCheck + \" \" + displayName\n    );\n    var reqData = {\n      email: email,\n      password: password,\n      passwordCheck: passwordCheck,\n      displayName: displayName,\n    };\n\n    try {\n      await axios({\n        method: \"post\",\n        url: \"http://localhost:5000/users/register\",\n        data: $.param(reqData),\n        headers: { \"content-type\": \"application/json\" },\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(\"No response\", error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n\n      console.log(\"Register Successful\");\n\n      const loginResponse = await axios({\n        method: \"post\",\n        url: \"http://localhost:5000/users/login\",\n        data: {\n          email: email,\n          password: password,\n        },\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n      setUserData({\n        token: loginResponse,\n        user: loginResponse,\n      });\n      // localStorage.setItem(\"auth-token\", loginResponse);\n      history.push(\"/\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return (\n    <div className=\"grid grid-cols-3\">\n      <div className=\"col-span-2 h-screen\">\n        <div className=\"flex flex-row items-center mt-6 ml-6 text-4xl font-quicksand\">\n          <HomeSvg />\n          <h1>Track your time in Residency</h1>\n        </div>\n      </div>\n      <div className=\"bg-crimson shadow-2xl shadow-inner h-screen grid justify-items-center\">\n        <div className=\"rounded-lg shadow-2xl w-3/4 bg-white mt-96 h-80 flex-col flex p-6\">\n          <h1 className=\"text-3xl\">\n            <Link to=\"/\">Login</Link> /{\" \"}\n            <text className=\"text-lightGrey\">Signup</text>\n          </h1>\n          <form className=\"flex flex-col mt-6 gap-4\" onSubmit={submit}>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              onChange={(\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => setEmail(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              onChange={(\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => setPassword(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              onChange={(\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => setPasswordCheck(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              id=\"dsplay-name\"\n              placeholder=\"Display Name\"\n              onChange={(\n                e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => setDisplayName(e.target.value)}\n            />\n            <button type=\"submit\" value=\"Register\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\authentication\\userAuth.ts",[],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\components\\AuthRoute.tsx",["59"],"C:\\Users\\Shelby\\Desktop\\code\\Nuerology-Residents\\client\\src\\pages\\Unauthorized.tsx",[],{"ruleId":"60","severity":1,"message":"61","line":27,"column":15,"nodeType":"62","endLine":29,"endColumn":9},{"ruleId":"60","severity":1,"message":"61","line":30,"column":69,"nodeType":"62","endLine":32,"endColumn":9},{"ruleId":"60","severity":1,"message":"61","line":58,"column":11,"nodeType":"62","endLine":60,"endColumn":9},{"ruleId":"60","severity":1,"message":"61","line":86,"column":11,"nodeType":"62","endLine":88,"endColumn":9},{"ruleId":"60","severity":1,"message":"61","line":114,"column":11,"nodeType":"62","endLine":116,"endColumn":9},{"ruleId":"60","severity":1,"message":"61","line":123,"column":11,"nodeType":"62","endLine":125,"endColumn":9},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":16,"column":10,"nodeType":"69","messageId":"70","endLine":16,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":18,"column":10,"nodeType":"69","messageId":"70","endLine":18,"endColumn":15},{"ruleId":"67","severity":1,"message":"71","line":2,"column":17,"nodeType":"69","messageId":"70","endLine":2,"endColumn":27},"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation"]